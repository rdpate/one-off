#!/bin/sh -Cue
#.help
# % OLD [NEW]
#
# Symlink NEW to OLD, similar to "ln -s OLD NEW".  NEW defaults to the current directory.
#
# If OLD is relative, then transform to an absolute path based on $PWD instead of creating a relative symlink.

fatal() { rc="$1"; shift; printf %s\\n "${0##*/} error: $*" >&2 || true; exit "$rc"; }
handle_option() { fatal 64 "unknown option $1"; }
while [ $# -gt 0 ]; do
    case "$1" in
        --) shift; break ;;
        --*=*) x="${1#--}"; handle_option "${x%%=*}" "${x#*=}"; shift ;;
        --*) handle_option "${1#--}"; shift ;;
        -?) handle_option "${1#-}"; shift ;;
        -?*)
            v="${1#??}"
            x="${1%"$v"}"
            handle_option "${x#-}" "$v"
            shift
            ;;
        *) break ;;
        esac
    done

case "$#" in
    0) fatal 64 'missing OLD [NEW] arguments' ;;
    1|2) ;;
    *) fatal 64 'unexpected arguments' ;;
    esac
[ -e "$1" ] || fatal 64 "missing $1"
# TODO: --force or another option to symlink to a missing file?
exec ln -s "$(readlink -f "$(dirname -- "$1")/$(basename -- "$1")")" "${2:-./}"
