#!/bin/sh -Cue
#.help
# % [FILE..]
#
# Show FILEs or standard input.
##
##Options:
##-xV --xyx=VALUE               option xyz uses VALUE

# selected exit codes from BSD man sysexits:
    # 64  usage error   eg. wrong arguments or bad syntax
    # 65  data error    incorrect user input data (not system data)
    # 66  no input      user input file did not exist or was not readable
    # 69  unavailable   service is unavailable or catch-all
    # 70  internal software error
    # 71  OS error
    # 73  can't create  user output file cannot be created
    # 74  IO error
    # 75  temp failure  reattempt later
    # 78  config error  something was unconfigured or misconfigured
fatal() { rc="$1"; shift; printf %s\\n "${0##*/} error: $*" >&2 || true; exit "$rc"; }
nonfatal() { printf %s\\n "${0##*/}: $*" >&2 || true; }

handle_option() { fatal 64 "unknown option $1"; }
while [ $# -gt 0 ]; do
    case "$1" in
        --) shift; break ;;
        --*=*) x="${1#--}"; handle_option "${x%%=*}" "${x#*=}"; shift ;;
        --*) handle_option "${1#--}"; shift ;;
        -?) handle_option "${1#-}"; shift ;;
        -?*)
            v="${1#??}"
            x="${1%"$v"}"
            handle_option "${x#-}" "$v"
            shift
            ;;
        *) break ;;
        esac
    done

showlines() {
    lineno=1
    while IFS= read -r line; do
        printf '%3d %s\n' "$lineno" "$line"
        lineno=$((lineno + 1))
        done
    }
if [ $# = 0 ]; then
    [ ! -t 0 ] || fatal 64 'missing FILE argument'
    showlines
else
    for file; do
        printf '### %s\n' "$file"
        exec <"$file"
        showlines
        done
    fi
