#!/bin/sh -Cue
#.help
# % write-to FILE COMMAND..
#
# Run command with standard output redirected to FILE.
#
# Options:
# -a  --append                  append to FILE
# -iX --in-progress=X           write to FILE.X, rename to FILE on success
# -i  --in-progress             --in-progress=temp
# -IP --in-progress-as=PATH     write to PATH, rename to FILE on success
#     --no-keep                 remove in-progress file or FILE on failure
# -c  --clobber                 overwrite output FILE, if exists

# TODO: maybe rename --no-keep as --discard (--discard-on-error?)
# TODO: document "opposite" options (--no-append, --no-in-progress, --keep)

fatal() { rc="$1"; shift; printf %s\\n "${0##*/} error: $*" >&2 || true; exit "$rc"; }
nonfatal() { printf %s\\n "${0##*/}: $*" >&2 || true; }

clobber=false
append=false
in_progress=
in_progress_as=false
keep=true
handle_option() {
    case "$1" in
        c|clobber)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            clobber=true
            ;;
        a|append)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            append=true
            ;;
        no-append)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            append=false
            ;;
        i|in-progress)
            [ $# = 2 ] || set -- "$1" temp
            case "$2" in
                */*) fatal 64 '--in-progress name cannot contain /' ;;
            esac
            in_progress="$2"
            in_progress_as=false
            ;;
        I|in-progress-as)
            [ $# = 2 ] || fatal 64 "missing value for option $1"
            [ $# = 2 ] || fatal 64 'missing --in-progress-as value'
            in_progress="$2"
            in_progress_as=true
            ;;
        no-in-progress)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            in_progress=
            in_progress_as=false
            ;;
        keep)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            keep=true
            ;;
        no-keep)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            keep=false
            ;;

        *) fatal 64 "unknown option $1" ;;
        esac
    }
while [ $# -gt 0 ]; do
    case "$1" in
        --) shift; break ;;
        --=*) fatal 64 'missing option name' ;;
        --*=*)
            x="${1#--}"
            v="${x#*=}"
            x="${x%%=*}"
            case "$x" in
                :?*|*[\ \`\~\!\@\#\$\%\^\&\*\\\|\;\'\"\?]*) fatal 64 'bad option name' ;;
                :)
                    shift
                    x="$v"
                    while [ -n "$x" ]; do
                        v="${x%?}"
                        set -- -"${x#"$v"}" "$@"
                        x="$v"
                        done
                    ;;
                *)
                    handle_option "$x" "$v"
                    shift
                    ;;
                esac
            ;;
        --:) shift ;;
        --:*|--*[\ \`\~\!\@\#\$\%\^\&\*\\\|\;\'\"\?]*) fatal 64 'bad option name' ;;
        --*) handle_option "${1#--}"; shift ;;
        -[\ \`\~\!\@\#\$\%\^\&\*\=\\\|\;\'\"\?]*) fatal 64 'bad option name' ;;
        -:*)
            x="${1#??}"
            shift
            while [ -n "$x" ]; do
                v="${x%?}"
                set -- -"${x#"$v"}" "$@"
                x="$v"
                done
            ;;
        -?) handle_option "${1#-}"; shift ;;
        -?*)
            v="${1#??}"
            x="${1%"$v"}"
            handle_option "${x#-}" "$v"
            shift
            ;;
        *) break ;;
        esac
    done

if [ $# = 0 ]; then
    fatal 64 'missing file and command arguments'
elif [ $# = 1 ]; then
    fatal 64 'missing command argument'
    fi

if $append; then
    if [ -n "$in_progress" ]; then
        fatal 64 'cannot --append with --in-progress'
        fi
    if $clobber; then
        fatal 64 'cannot --append and --clobber'
        fi
elif $clobber; then
    set +C
    fi

output_file="$1"
shift
case "$output_file" in
    -*) output_file="./$output_file" ;;
    esac

if [ -n "$in_progress" ]; then
    if ! $in_progress_as; then
        in_progress="$output_file.$in_progress"
        fi
    rc=0
    $clobber || [ ! -e "$output_file" ] || fatal 73 "exists: $output_file"
    $clobber || [ ! -e "$in_progress" ] || fatal 73 "exists: $in_progress"
    "$@" 1>"$in_progress" || rc=$?
    if [ $rc = 0 ]; then
        mv -f "$in_progress" "$output_file" || fatal 73 "failed to mv -f $in_progress $output_file"
        # TODO: what to do if mv fails?
    elif ! $keep; then
        rm -f "$in_progress" || true
        fi
    exit $rc
elif ! $keep; then
    rc=0
    if $append; then
        exec 1>>"$output_file"
    else
        $clobber || [ ! -e "$output_file" ] || fatal 73 "exists: $output_file"
        exec 1>"$output_file"
        fi
    "$@" || rc=$?
    if [ $rc != 0 ]; then
        rm -f "$output_file" || true
        fi
    exit $rc
else
    if $append; then
        exec "$@" 1>>"$output_file"
    else
        $clobber || [ ! -e "$output_file" ] || fatal 73 "exists: $output_file"
        exec "$@" 1>"$output_file"
        fi
    fi
