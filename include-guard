#!/bin/sh -Cue
#.help
# % [FILE..]
#
# Wrap FILEs with include guards.
#
# Options:
#     --prefix=PREFIX           guard name prefix (default INCLUDE_GUARD)

# selected exit codes from BSD man sysexits:
    # 64  usage error   eg. wrong arguments or bad syntax
    # 65  data error    incorrect user input data (not system data)
    # 66  no input      user input file did not exist or was not readable
    # 69  unavailable   service is unavailable or catch-all
    # 70  internal software error
    # 71  OS error
    # 73  can't create  user output file cannot be created
    # 74  IO error
    # 75  temp failure  reattempt later
    # 78  config error  something was unconfigured or misconfigured
fatal() { rc="$1"; shift; printf %s\\n "${0##*/} error: $*" >&2 || true; exit "$rc"; }
nonfatal() { printf %s\\n "${0##*/}: $*" >&2 || true; }

prefix=INCLUDE_GUARD
replace=false
handle_option() {
    case "$1" in
        # add options here, with common checks:
            #[ $# = 2 ] || fatal 64 "missing value for option $1"
            #[ $# = 1 ] || fatal 64 "unexpected value for option $1"
            #[ -n "${2:-}" ] || fatal 64 "missing value for option $1"
            #[ -n "$2" ] || fatal 64 "expected non-empty value for option $1"
            # $2 is only empty for "--long-option=" (equals with no following value)
        prefix)
            [ -n "${2:-}" ] || fatal 64 "missing value for option $1"
            prefix="$2"
            ;;
        replace)
            [ $# = 1 ] || fatal 64 "unexpected value for option $1"
            replace=true
            ;;
        *) fatal 64 "unknown option $1" ;;
        esac
    }
while [ $# -gt 0 ]; do
    case "$1" in
        --) shift; break ;;
        --*=*) x="${1#--}"; handle_option "${x%%=*}" "${x#*=}"; shift ;;
        --*) handle_option "${1#--}"; shift ;;
        -?) handle_option "${1#-}"; shift ;;
        -?*)
            v="${1#??}"
            x="${1%"$v"}"
            handle_option "${x#-}" "$v"
            shift
            ;;
        *) break ;;
        esac
    done
[ $# != 0 ] || fatal 64 'missing FILE argument'

random_str() {
    head -c16 /dev/urandom | md5sum -b | cut -d' ' -f1
    }
has_guard() {
    {
        read -r first first_rest
        read -r second second_rest
        } <"$1"
    [ x"$first" = x'#ifndef' ]
    [ x"$second" = x'#define' ]
    [ x"$first_rest" = x"$second_rest" ]
    [ x"$(tail -n1 -- "$1")" = x'#endif' ]
    }
preamble() {
    guard="${prefix}_$(random_str)"
    printf %s\\n "#ifndef $guard" "#define $guard" ''
    }
for arg; do
    if ! $replace && [ -e "$arg" ] && has_guard "$arg"; then
        nonfatal "skipping file with exsting guard: $arg"
        continue
        fi
    temp="$arg.tmp"
    exec >"$temp"
    if [ -e "$arg" ]; then
        exec <"$arg"
        preamble
        if has_guard "$arg"; then
            read -r first
            read -r second
            while IFS= read -r line; do
                if [ -z "$line" ]; then
                    continue
                    fi
                printf %s\\n "$line"
                break
                done
            while IFS= read -r line; do
                printf %s\\n "$line"
                done
        else
            cat
            printf %s\\n '' '#endif'
            fi
    else
        preamble
        printf %s\\n '#endif'
        fi
    cat -- "$temp" >|"$arg"
    rm "$temp"
    done
